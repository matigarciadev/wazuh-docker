services:
  # ---------- Agents (point to the Load Balancer) ----------
  agent-centos:
    build: ./agents/agent-centos
    environment:
      MANAGER_HOST: wazuh-lb         # enrollment via LB (service DNS on the same Docker network)
      MANAGER_PORT: "1515"
      AGENT_NAME: agent-centos
    depends_on:
      manager-1: { condition: service_healthy }
      manager-2: { condition: service_healthy }
      wazuh-lb:  { condition: service_started }
    networks: [wazuh-net]
    restart: unless-stopped

  agent-ubuntu:
    build: ./agents/agent-ubuntu
    environment:
      MANAGER_HOST: wazuh-lb
      MANAGER_PORT: "1515"
      AGENT_NAME: agent-ubuntu
    depends_on:
      manager-1: { condition: service_healthy }
      manager-2: { condition: service_healthy }
      wazuh-lb:  { condition: service_started }
    networks: [wazuh-net]
    restart: unless-stopped

  # ---------- Manager 1 (MASTER) ----------
  manager-1:
    build: ./manager
    hostname: wazuh-manager-1
    # Expose API for the Dashboard app; 1516 only if you want to inspect cluster from host
    ports:
      - "55000:55000"    # Wazuh API
      - "1516:1516"      # Cluster backbone (optional to expose)
    volumes:
      - ./certs/manager-1:/etc/wazuh/certs:ro
      - ./managers/manager-1/config/ossec.conf:/var/ossec/etc/ossec.conf:ro
      - manager-1-logs:/var/ossec/logs
      - ./manager/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x wazuh-monitord >/dev/null"]
      interval: 30s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      wazuh-net:
        aliases:
          - wazuh-manager-1
          - wazuh-manager-1.wazuh.lab
    restart: unless-stopped

  # ---------- Manager 2 (WORKER) ----------
  manager-2:
    build: ./manager
    hostname: wazuh-manager-2
    volumes:
      - ./certs/manager-2:/etc/wazuh/certs:ro
      - ./managers/manager-2/config/ossec.conf:/var/ossec/etc/ossec.conf:ro
      - manager-2-logs:/var/ossec/logs
      - ./manager/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:ro
    depends_on:
      indexer: { condition: service_healthy }
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x wazuh-monitord >/dev/null"]
      interval: 30s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      wazuh-net:
        aliases:
          - wazuh-manager-2
          - wazuh-manager-2.wazuh.lab
    restart: unless-stopped

  # ---------- Load Balancer (HAProxy) ----------
  # Note: no host port publishing to avoid conflicts (1514 already in use on host).
  # If you need external agents, map host ports here, e.g. "51514:1514" and "51515:1515".
  wazuh-lb:
    image: haproxy:2.9
    hostname: wazuh-lb
    depends_on:
      manager-1: { condition: service_healthy }
      manager-2: { condition: service_healthy }
    expose:
      - "1514"
      - "1515"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      wazuh-net:
        aliases:
          - wazuh-lb
          - wazuh-lb.wazuh.lab
    restart: unless-stopped

  # ---------- Indexer ----------
  indexer:
    image: wazuh/wazuh-indexer:4.12.0
    container_name: wazuh-indexer
    hostname: wazuh-indexer
    environment:
      OPENSEARCH_JAVA_OPTS: "-Xms1g -Xmx1g"
    ulimits:
      memlock: { soft: -1, hard: -1 }
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./certs/indexer:/usr/share/wazuh-indexer/certs:ro
      - ./indexer/config/opensearch.yml:/usr/share/wazuh-indexer/opensearch.yml:ro
      - esdata:/usr/share/wazuh-indexer/data
    networks:
      wazuh-net:
        aliases:
          - wazuh-indexer
          - wazuh-indexer.wazuh.lab
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail --cacert /usr/share/wazuh-indexer/certs/root-ca.pem -u admin:admin --connect-timeout 2 --max-time 5 \"https://wazuh-indexer.wazuh.lab:9200/_cluster/health?wait_for_status=yellow&timeout=10s\" > /dev/null || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s

  # ---------- Dashboard ----------
  dashboard:
    image: wazuh/wazuh-dashboard:4.12.0
    container_name: wazuh-dashboard
    hostname: wazuh-dashboard
    depends_on:
      manager-1: { condition: service_healthy }
      manager-2: { condition: service_healthy }
      indexer:   { condition: service_healthy }
    environment:
      OPENSEARCH_HOSTS: '["https://wazuh-indexer.wazuh.lab:9200"]'
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: admin
      OPENSEARCH_SSL_VERIFICATIONMODE: full
      OPENSEARCH_SSL_CERTIFICATEAUTHORITIES: /etc/wazuh-dashboard/certs/root-ca.pem
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_CERTIFICATE: /etc/wazuh-dashboard/certs/dashboard.pem
      SERVER_SSL_KEY: /etc/wazuh-dashboard/certs/dashboard-key.pem
    ports:
      - "5601:5601"
    volumes:
      - ./dashboard/opensearch_dashboards.yml:/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml:ro
      - ./dashboard/wazuh.yml:/usr/share/wazuh-dashboard/data/wazuh/config/wazuh.yml:ro
      - ./certs/dashboard:/etc/wazuh-dashboard/certs:ro
    networks:
      wazuh-net:
        aliases:
          - wazuh-dashboard
          - wazuh-dashboard.wazuh.lab
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sk -u admin:admin https://localhost:5601/api/status | grep -qi '\"state\":\"green\"'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ---------- Single Filebeat (reads alerts from both managers) ----------
  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:7.10.2
    container_name: wazuh-filebeat
    user: root
    depends_on:
      manager-1: { condition: service_healthy }
      manager-2: { condition: service_healthy }
      indexer:   { condition: service_healthy }
    networks: [wazuh-net]
    restart: unless-stopped
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./certs/filebeat:/usr/share/filebeat/certs:ro
      - manager-1-logs:/sources/manager-1/logs:ro
      - manager-2-logs:/sources/manager-2/logs:ro
      - ./filebeat/config/wazuh-template.json:/etc/filebeat/wazuh-template.json:ro
    healthcheck:
      test: ["CMD-SHELL", "filebeat test config -e && filebeat test output -e"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 20s

# ---------- Persistent volumes ----------
volumes:
  manager-1-logs:
  manager-2-logs:
  esdata:

# ---------- Network ----------
networks:
  wazuh-net:
    driver: bridge
    name: wazuh-docker_wazuh-net
